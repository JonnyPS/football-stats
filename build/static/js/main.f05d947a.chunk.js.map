{"version":3,"sources":["App.js","Chart.js","serviceWorker.js","index.js"],"names":["require","DisplayStats","props","react_default","a","createElement","className","gamesPlayed","gamesWon","gamesLost","gamesDrawn","DisplayDetails","teams","map","key","i","src","logo","alt","name","onClick","activateClickResponse","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","allTeams","allMatches","profile","colour","teamDetails","teamId","teamName","input","selectedMatches","selectedTeam","homeTeam","awayTeam","winner","score","result","matchday","outcomes","data","labels","datasets","updateInput","bind","assertThisInitialized","findMatches","selectTeam","resetState","removeDataset","showAllDatasets","showHomeGames","showAwayGames","console","log","initialState","setState","splice","_this2","item","index","homeGamesList","homeResultsOfMatches","undefined","label","fixtures","filter","games","home","includes","push","homePointsSoFar","reduce","acc","current","length","currentState","concat","awayGamesList","awayResultsOfMatches","away","awayPointsSoFar","_this3","replace","c","toUpperCase","_this4","saveInitialState","addy","h","Headers","append","req","Request","method","headers","mode","fetch","then","response","json","counter","id","shortName","catch","ex","e","value","target","_this5","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","teamColour","selectedTeamId","TeamName","resultsOfMatches","filteredMatches","matches","match","fullTime","matchesSoFar","game","ourTeam","pointsSoFar","defineProperty","backgroundColor","borderColor","_iterator","Symbol","iterator","next","done","err","return","type","placeholder","onChange","es","height","width","options","animation","duration","tooltips","callbacks","title","tooltipItem","teamInDataSet","datasetIndex","highlightedGameNumber","highlightedGameDetails","afterTitle","legend","display","scales","yAxes","ticks","max","min","stepSize","scaleLabel","labelString","xAxes","text","Component","List","items","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05d947a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nvar cloneDeep = require('clone-deep');\r\n\r\nfunction DisplayStats (props) {\r\n  return (\r\n    <ul className=\"stats-list\">\r\n      <li>Number of games played: <span className=\"bold-copy\">{props.gamesPlayed}</span></li>\r\n      <li>Games won: <span className=\"bold-copy\">{props.gamesWon}</span></li>\r\n      <li>Games lost: <span className=\"bold-copy\">{props.gamesLost}</span></li>\r\n      <li>Games drawn: <span className=\"bold-copy\">{props.gamesDrawn}</span></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction DisplayDetails (props) {\r\n  return (\r\n    <ul className=\"inline-list\">\r\n      {props.teams.map( (key, i) => (\r\n        <li key={i}><img src={key.logo} alt={key.name} onClick={() => props.activateClickResponse(key.name)} /></li>\r\n      ))}  \r\n    </ul>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allTeams: null,\r\n      allMatches: null,\r\n\r\n      profile: [\r\n        {\r\n          logo: 'img/arsenal.png',\r\n          name: 'Arsenal',\r\n          colour: '#f00005',\r\n        },\r\n        {\r\n          logo: 'img/bournemouth.png',\r\n          name: 'Bournemouth',\r\n          colour: '#8d0104',\r\n        },\r\n        {\r\n          logo: 'img/brighton-hove.png',\r\n          name: 'Brighton Hove',\r\n          colour: '#005daa',\r\n        },\r\n        {\r\n          logo: 'img/burnley.png',\r\n          name: 'Burnley',\r\n          colour: '#fff515',\r\n        },\r\n        {\r\n          logo: 'img/cardiff.png',\r\n          name: 'Cardiff',\r\n          colour: '#035da9',\r\n        },\r\n        {\r\n          logo: 'img/chelsea.png',\r\n          name: 'Chelsea',\r\n          colour: '#024595',\r\n        },\r\n        {\r\n          logo: 'img/crystal-palace.png',\r\n          name: 'Crystal Palace',\r\n          colour: '#b80007',\r\n        },\r\n        {\r\n          logo: 'img/everton.png',\r\n          name: 'Everton',\r\n          colour: '#133e6c',\r\n        },\r\n        {\r\n          logo: 'img/Fulham.png',\r\n          name: 'Fulham',\r\n          colour: '#000000',\r\n        },\r\n        {\r\n          logo: 'img/huddersfield.png',\r\n          name: 'Huddersfield',\r\n          colour: '#003d93',\r\n        },\r\n        {\r\n          logo: 'img/leicester-city.png',\r\n          name: 'Leicester City',\r\n          colour: '#003d93',\r\n        },\r\n        {\r\n          logo: 'img/liverpool.png',\r\n          name: 'Liverpool',\r\n          colour: '#d00623',\r\n        },\r\n        {\r\n          logo: 'img/man-city.png',\r\n          name: 'Man City',\r\n          colour: '#5ba0da',\r\n        },\r\n        {\r\n          logo: 'img/man-united.png',\r\n          name: 'Man United',\r\n          colour: '#da030e',\r\n        },\r\n        {\r\n          logo: 'img/newcastle.png',\r\n          name: 'Newcastle',\r\n          colour: '#000',\r\n        },\r\n        {\r\n          logo: 'img/southampton.png',\r\n          name: 'Southampton',\r\n          colour: '#ed1a3b',\r\n        },\r\n        {\r\n          logo: 'img/tottenham.png',\r\n          name: 'Tottenham',\r\n          colour: '#aeaeae',\r\n        },\r\n        {\r\n          logo: 'img/watford.png',\r\n          name: 'Watford',\r\n          colour: '#fef823',\r\n        },\r\n        {\r\n          logo: 'img/west-ham.png',\r\n          name: 'West Ham',\r\n          colour: '#7b2c3a',\r\n        },\r\n        {\r\n          logo: 'img/wolverhampton.png',\r\n          name: 'Wolverhampton',\r\n          colour: '#faa61a',\r\n        },        \r\n      ],\r\n\r\n      teamDetails: [\r\n        {\r\n          teamId: 'Team Id',\r\n          teamName: 'Team Name',\r\n        },\r\n      ],\r\n      input: '',\r\n      selectedMatches: [\r\n        {\r\n          selectedTeam: null,\r\n          homeTeam: null,\r\n          awayTeam: null,\r\n          winner: null,\r\n          score: null,\r\n          result: [null],\r\n        },\r\n      ],\r\n      gamesPlayed: null,\r\n      gamesWon: null,\r\n      gamesLost: null,\r\n      gamesDrawn: null,\r\n\r\n      matchday: [],\r\n      outcomes: [],\r\n      data: {\r\n        labels: '',\r\n        datasets: [{\r\n            // label: null,\r\n            // backgroundColor: 'rgb(255, 99, 132)',\r\n            // borderColor: 'rgb(255, 99, 132)',\r\n            // data: null,\r\n        }]\r\n      },\r\n\r\n    }\r\n\r\n    // because of where these functions are called... (?)\r\n    // we need to define that 'this', refers to our component App\r\n    this.updateInput = this.updateInput.bind( this )\r\n    this.findMatches = this.findMatches.bind( this )\r\n    this.selectTeam = this.selectTeam.bind( this )\r\n    this.resetState = this.resetState.bind( this )\r\n    this.removeDataset = this.removeDataset.bind( this )\r\n    this.showAllDatasets = this.showAllDatasets.bind( this )\r\n    this.showHomeGames = this.showHomeGames.bind( this )\r\n    this.showAwayGames = this.showAwayGames.bind( this )\r\n  }\r\n\r\n  saveInitialState() {\r\n    console.log( 'save initialState' )\r\n    this.initialState = [this.state]\r\n  }\r\n\r\n  resetState() {\r\n    console.log('resetState')\r\n    this.setState( this.initialState[0] )\r\n  }\r\n\r\n  removeDataset() {\r\n    console.log('removeDataset')\r\n    this.setState( this.state.data.datasets.splice(-1, 1) )\r\n  }\r\n\r\n  showAllDatasets() {\r\n    console.log('showAllDatasets')\r\n    this.state.profile.map( (item, index) => {\r\n      console.log('item.name', item.name)\r\n      console.log('index', index)\r\n      this.findMatches( item.name )\r\n      console.log('this.findMatches', this.findMatches)\r\n    })\r\n  }\r\n\r\n  showHomeGames() {\r\n    console.log('showHomeGames')\r\n    // setup empty arrays to hold home games and points from home games\r\n    let homeGamesList = [];\r\n    let homeResultsOfMatches = [];\r\n    this.state.data.datasets.map( (item, index) => {\r\n      console.log('datasets', item)\r\n      // check to not include first item from datasets array (empty obj)      \r\n      if ( item.label !== undefined ) {\r\n        console.log('item.label', item.label)\r\n        var homeGames = item.fixtures.filter( (games, index) => { \r\n          console.log( 'games', games)\r\n          // if the home team in games includes our selected teams, push the game into our array\r\n          if ( games.home.includes(item.label) ) {\r\n            homeGamesList.push( games )\r\n          }\r\n        })\r\n      }\r\n      console.log( 'homeGamesList', homeGamesList )\r\n      // map over the home games, retrieve points gained from them and push into our home results array\r\n      homeGamesList.map( ( item ) => {\r\n        return ( item.winner === \"HOME_TEAM\" ) ? (homeResultsOfMatches.push( 3 )) : ( (item.winner === \"AWAY_TEAM\") ? homeResultsOfMatches.push( 0 ) : homeResultsOfMatches.push( 1 ))\r\n      })\r\n      console.log( 'homeResultsOfMatches', homeResultsOfMatches )  \r\n    })\r\n    // tally up points\r\n    var homePointsSoFar = homeResultsOfMatches.reduce((acc, current) => {\r\n      acc.push((acc[acc.length - 1] || 0) + current);\r\n      return acc;\r\n    }, [])\r\n    console.log( 'homePointsSoFar', homePointsSoFar )\r\n    // update state with home game results\r\n    this.setState( (currentState) => {\r\n      return {\r\n        data: {\r\n          datasets: currentState.data.datasets.concat({ \r\n            data: homePointsSoFar\r\n          })\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  showAwayGames() {\r\n    console.log('showawayGames')\r\n    let awayGamesList = [];\r\n      let awayResultsOfMatches = [];\r\n      this.state.data.datasets.map( (item, index) => {\r\n        console.log('datasets', item)\r\n        // check to not include first item from datasets array (empty obj)      \r\n        if ( item.label !== undefined ) {\r\n          console.log('item.label', item.label)\r\n          var awayGames = item.fixtures.filter( (games, index) => { \r\n            console.log( 'games', games)\r\n            // return games.away.includes(item.label)\r\n            if ( games.away.includes(item.label) ) {\r\n              awayGamesList.push( games )\r\n            }\r\n          })\r\n        }\r\n        console.log( 'awayGamesList', awayGamesList )\r\n        awayGamesList.map( ( item ) => {\r\n          return ( item.winner === \"AWAY_TEAM\" ) ? (awayResultsOfMatches.push( 3 )) : ( (item.winner === \"AWAY_TEAM\") ? awayResultsOfMatches.push( 0 ) : awayResultsOfMatches.push( 1 ))\r\n        })\r\n        console.log( 'awayResultsOfMatches', awayResultsOfMatches )\r\n        \r\n      })\r\n      var awayPointsSoFar = awayResultsOfMatches.reduce((acc, current) => {\r\n            acc.push((acc[acc.length - 1] || 0) + current);\r\n            return acc;\r\n          }, [])\r\n        console.log( 'awayPointsSoFar', awayPointsSoFar )\r\n      this.setState( (currentState) => {\r\n            return {\r\n              data: {\r\n                datasets: currentState.data.datasets.concat({ \r\n                  data: awayPointsSoFar\r\n                })\r\n              },\r\n            }\r\n          })\r\n  }\r\n\r\n  selectTeam(name) {\r\n    console.log('selectTeam name', name )\r\n    console.log('state', this.state )\r\n    this.setState({\r\n      input: name.replace(/^\\w/, c => c.toUpperCase())\r\n    }, () => {\r\n      this.findMatches()\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log( 'componentDidMount - get json data' )\r\n    this.saveInitialState()\r\n\r\n    // Use first urls array when new season starts, whilst in summer recess use second urls array\r\n    // const urls = ['https://api.football-data.org/v2/competitions/PL/teams', 'https://api.football-data.org/v2/competitions/PL/matches?status=FINISHED']\r\n    const urls = ['https://api.football-data.org/v2/competitions/PL/teams?season=2018', 'https://api.football-data.org/v2/competitions/PL/matches?season=2018']\r\n\r\n    // map over array to use the url addresses\r\n    urls.map( ( addy ) => {\r\n      // set up headers\r\n      let h = new Headers()\r\n      h.append('Accept', 'application/json')\r\n      h.append('X-Auth-Token', '9d006876cd4d43f08084a828529fc968')\r\n      let req = new Request(addy, {\r\n        method: 'GET',\r\n        headers: h,\r\n        mode: 'cors' \r\n      })\r\n\r\n      // for each url in the array, use fetch to get the resource\r\n      fetch(req) \r\n      .then( (response) => {\r\n        return response.json()    \r\n      })\r\n      .then( (json) => {\r\n        // console.log( 'set json to state properties' )\r\n        // hacky if / else statement - should probably be replaced by a for in loop\r\n        // it will surfice temporarily\r\n        if ( this.state.allTeams == null ) { \r\n          // console.log( 'json teams', json )\r\n          // extract only the id and team short name from the returned data\r\n          // loop over every team, get the data and assign it in to an array of objects\r\n          json.teams.map((counter) => {\r\n            // console.log( 'json teams', json.teams)\r\n            const teamId = counter.id\r\n            const teamName = counter.shortName\r\n            this.setState((currentState) => {\r\n              return {\r\n                allTeams: json,\r\n                teamDetails: currentState.teamDetails.concat([{\r\n                  teamName: teamName,\r\n                  teamId: teamId\r\n                }]),\r\n              }\r\n            })\r\n          })\r\n        } else {\r\n          // when looping over urls[1], assign value to this.state.allMatches property\r\n          this.setState(( currentState ) => {\r\n            // console.log( this.state.teamDetails )\r\n            // console.log( 'allMatches', json )\r\n            // console.log( 'json matches', json )\r\n            return {\r\n              allMatches: json,\r\n            }\r\n          })\r\n        }\r\n        // once the data has loaded, \r\n        if ( this.state.allTeams !== null && this.state.allMatches !== null ) {       \r\n        }\r\n              })\r\n      .catch( (ex) => {\r\n        console.log('parsing failed:', ex)\r\n      })\r\n      .then ( () => {\r\n        this.saveInitialState()\r\n      })\r\n    })\r\n  }\r\n\r\n  // will only run after component has updated \r\n  // - good for catching errors where the code is run but the state has not yet updated\r\n  componentDidUpdate() {\r\n    console.log('state on update', this.state )\r\n  }\r\n\r\n  updateInput(e) {\r\n    const value = e.target.value\r\n    this.setState({\r\n      input: value.replace(/^\\w/, c => c.toUpperCase())\r\n    })\r\n  }\r\n\r\n  findMatches( name ) {\r\n    console.log('name', name)\r\n    // look through all teams in our list of teams\r\n    for (let item of this.state.teamDetails) {\r\n      // check our list to see if our input matches any team names \r\n      if ( this.state.input === item.teamName || name === item.teamName ) {\r\n        var teamColour = this.state.profile.filter( (key) => { return key.name === item.teamName } )\r\n        var colour = teamColour[0].colour\r\n        let selectedTeamId = item.teamId\r\n        let TeamName = item.teamName\r\n        let resultsOfMatches = []\r\n        let fixtures = []\r\n\r\n        // return only matches that involve our team\r\n        let filteredMatches = this.state.allMatches.matches.filter( (match) => { return match.awayTeam.id === selectedTeamId || match.homeTeam.id === selectedTeamId })\r\n        console.log( 'filteredMatches', filteredMatches)\r\n        filteredMatches.map( (match) => {\r\n          return (\r\n            fixtures.push({\r\n              home: match.homeTeam.name,\r\n              away: match.awayTeam.name,\r\n              score: match.score.fullTime.homeTeam + ' : ' + match.score.fullTime.awayTeam,\r\n              winner: match.score.winner\r\n            })\r\n          )\r\n        })\r\n        console.log( 'fixtures ', fixtures )\r\n\r\n\r\n        let matchesSoFar = filteredMatches.map( (game) => { return game.matchday } )\r\n\r\n\r\n        function getMatchResults( game, ourTeam ) {\r\n          let result = game.score.winner\r\n          let home = game.homeTeam.id\r\n          if ( result === \"HOME_TEAM\" && home === selectedTeamId ) { resultsOfMatches.push( 3 ) }\r\n          if ( result === \"HOME_TEAM\" && home !== selectedTeamId ) { resultsOfMatches.push( 0 ) }\r\n          if ( result === \"AWAY_TEAM\" && home === selectedTeamId ) { resultsOfMatches.push( 0 ) }\r\n          if ( result === \"AWAY_TEAM\" && home !== selectedTeamId ) { resultsOfMatches.push( 3 ) }\r\n          if ( result === \"DRAW\" ) { resultsOfMatches.push( 1 ) }\r\n        }\r\n\r\n        filteredMatches.map( getMatchResults )\r\n        // addUpMatches\r\n        var pointsSoFar = resultsOfMatches.reduce((acc, current) => {\r\n          acc.push((acc[acc.length - 1] || 0) + current);\r\n          return acc;\r\n        }, [])\r\n\r\n        // map over our matches and set component state accordingly\r\n        // filteredMatches.map( (games) => {\r\n          this.setState( (currentState) => {\r\n            return {\r\n              gamesPlayed: resultsOfMatches.length,\r\n              matchday: filteredMatches,\r\n              data: {\r\n                labels: matchesSoFar,\r\n                datasets: currentState.data.datasets.concat({ \r\n                  label: TeamName,\r\n                  backgroundColor: colour,\r\n                  // borderColor: 'rgb(255, 99, 132)',\r\n                  data: pointsSoFar,\r\n                  fixtures: fixtures,\r\n                  borderColor: colour,\r\n                  backgroundColor: 'transparent',\r\n                })\r\n              },\r\n            }\r\n          })\r\n      }\r\n    }\r\n  }\r\n  \r\n  render(json, item) {\r\n    return (\r\n      <div>\r\n        <input\r\n          type='text'\r\n          placeholder='Find your team...'\r\n          value={this.state.input}\r\n          onChange={this.updateInput}\r\n        />\r\n        <button onClick={this.findMatches}>Submit</button>\r\n\r\n        <DisplayDetails\r\n          teams={this.state.profile}\r\n          activateClickResponse={this.selectTeam}\r\n        /> \r\n\r\n        <DisplayStats\r\n          gamesPlayed={this.state.gamesPlayed}\r\n          gamesWon={this.state.gamesWon}\r\n          gamesLost={this.state.gamesLost}\r\n          gamesDrawn={this.state.gamesDrawn}\r\n        />        \r\n\r\n        <Line \r\n          data={this.state.data}\r\n          height={200}\r\n          width={400}\r\n          options={{\r\n            animation: {\r\n              duration: 0\r\n            },\r\n            tooltips: {\r\n              callbacks: {\r\n                title: function( tooltipItem, data ) {\r\n                  var teamInDataSet = tooltipItem[0].datasetIndex;\r\n                  var highlightedGameNumber = tooltipItem[0].index;\r\n                  var highlightedTeamName = data.datasets[teamInDataSet].label;\r\n                  var highlightedGameDetails = data.datasets[teamInDataSet].fixtures[highlightedGameNumber];\r\n                  return highlightedGameDetails.home + ' v ' + highlightedGameDetails.away; \r\n                },\r\n                afterTitle: function( tooltipItem, data ) {\r\n                  var teamInDataSet = tooltipItem[0].datasetIndex;\r\n                  var highlightedGameNumber = tooltipItem[0].index;\r\n                  var highlightedTeamName = data.datasets[teamInDataSet].label;\r\n                  var highlightedGameDetails = data.datasets[teamInDataSet].fixtures[highlightedGameNumber];\r\n                  return highlightedGameDetails.score;\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              display: true,\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                ticks: {\r\n                  max: this.state.matchday.length * 3,\r\n                  min: 0,\r\n                  stepSize: 3,\r\n                },\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Points available'\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Matchday'\r\n                }\r\n              }]\r\n            },\r\n            title: {\r\n              display: 'hello',\r\n              text: 'Premier League Teams',\r\n            }\r\n          }}\r\n        />\r\n\r\n        <button onClick={this.resetState}>Reset</button>\r\n        <button onClick={this.removeDataset}>Remove</button>\r\n        <button onClick={this.showAllDatasets}>Show all</button>\r\n        <button onClick={this.showHomeGames}>Show only home games</button>\r\n        <button onClick={this.showAwayGames}>Show only away games</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nfunction List (props) {\r\n  return (\r\n    <ul>\r\n    \t{props.items.map( (value) => (\r\n    \t\t<li key={value}>\r\n    \t\t\t{value}\r\n\t\t\t</li>\r\n    \t))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nclass Chart extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  list: ['something', 'someone', 'somewhere'],\r\n\t}\r\n  }\r\n\r\n  componentDidMount() {\r\n  \t\r\n  }\r\n\r\n  render() {\r\n  \tconsole.log( 'this first component' )\r\n  \tconsole.log( this )\r\n  \t// return null\r\n    return (\r\n      <List items={this.state.list} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Chart from './Chart';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('inputBox'));\r\n// ReactDOM.render(<Chart />, document.getElementById('chartHolder'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}